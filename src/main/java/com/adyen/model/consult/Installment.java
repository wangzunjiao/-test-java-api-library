/*
 * Payment API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.consult;

//model

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.consult.Plan;
import com.adyen.model.consult.SupportCardBrand;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Installment
 */
@JsonPropertyOrder({
  Installment.JSON_PROPERTY_SUPPORT_CARD_BRANDS,
  Installment.JSON_PROPERTY_PLANS
})
//pojo

public class Installment {
  public static final String JSON_PROPERTY_SUPPORT_CARD_BRANDS = "supportCardBrands";
  private List<SupportCardBrand> supportCardBrands = null;

  public static final String JSON_PROPERTY_PLANS = "plans";
  private List<Plan> plans = null;

  public Installment() { 
  }

  /**
   * The logo information about the payment method.
   *
   * @param supportCardBrands
   * @return the current {@code Installment} instance, allowing for method chaining
   */
  public Installment supportCardBrands(List<SupportCardBrand> supportCardBrands) {
    this.supportCardBrands = supportCardBrands;
    return this;
  }

  public Installment addSupportCardBrandsItem(SupportCardBrand supportCardBrandsItem) {
    if (this.supportCardBrands == null) {
      this.supportCardBrands = new ArrayList<>();
    }
    this.supportCardBrands.add(supportCardBrandsItem);
    return this;
  }

  /**
   * The logo information about the payment method.
   * @return supportCardBrands
   */
  @ApiModelProperty(value = "The logo information about the payment method.")
  @JsonProperty(JSON_PROPERTY_SUPPORT_CARD_BRANDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<SupportCardBrand> getSupportCardBrands() {
    return supportCardBrands;
  }

  /**
   * The logo information about the payment method.
   *
   * @param supportCardBrands
   */ 
  @JsonProperty(JSON_PROPERTY_SUPPORT_CARD_BRANDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportCardBrands(List<SupportCardBrand> supportCardBrands) {
    this.supportCardBrands = supportCardBrands;
  }

  /**
   * The list of installment plans for payment methods that support installments. 
   *
   * @param plans
   * @return the current {@code Installment} instance, allowing for method chaining
   */
  public Installment plans(List<Plan> plans) {
    this.plans = plans;
    return this;
  }

  public Installment addPlansItem(Plan plansItem) {
    if (this.plans == null) {
      this.plans = new ArrayList<>();
    }
    this.plans.add(plansItem);
    return this;
  }

  /**
   * The list of installment plans for payment methods that support installments. 
   * @return plans
   */
  @ApiModelProperty(value = "The list of installment plans for payment methods that support installments. ")
  @JsonProperty(JSON_PROPERTY_PLANS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<Plan> getPlans() {
    return plans;
  }

  /**
   * The list of installment plans for payment methods that support installments. 
   *
   * @param plans
   */ 
  @JsonProperty(JSON_PROPERTY_PLANS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPlans(List<Plan> plans) {
    this.plans = plans;
  }

  /**
   * Return true if this Installment object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Installment installment = (Installment) o;
    return Objects.equals(this.supportCardBrands, installment.supportCardBrands) &&
        Objects.equals(this.plans, installment.plans);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supportCardBrands, plans);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Installment {\n");
    sb.append("    supportCardBrands: ").append(toIndentedString(supportCardBrands)).append("\n");
    sb.append("    plans: ").append(toIndentedString(plans)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of Installment given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Installment
   * @throws JsonProcessingException if the JSON string is invalid with respect to Installment
   */
  public static Installment fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, Installment.class);
  }
/**
  * Convert an instance of Installment to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
