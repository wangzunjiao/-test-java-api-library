/*
 * Payment API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.consult;

//model

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.consult.Logo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * SupportBank
 */
@JsonPropertyOrder({
  SupportBank.JSON_PROPERTY_BANK_IDENTIFIER_CODE,
  SupportBank.JSON_PROPERTY_BANK_SHORT_NAME,
  SupportBank.JSON_PROPERTY_BANK_LOGO
})
//pojo

public class SupportBank {
  public static final String JSON_PROPERTY_BANK_IDENTIFIER_CODE = "bankIdentifierCode";
  private String bankIdentifierCode;

  public static final String JSON_PROPERTY_BANK_SHORT_NAME = "bankShortName";
  private String bankShortName;

  public static final String JSON_PROPERTY_BANK_LOGO = "bankLogo";
  private Logo bankLogo;

  public SupportBank() { 
  }

  /**
   * The unique code of the bank. See Bank list to check the valid values.
   *
   * @param bankIdentifierCode
   * @return the current {@code SupportBank} instance, allowing for method chaining
   */
  public SupportBank bankIdentifierCode(String bankIdentifierCode) {
    this.bankIdentifierCode = bankIdentifierCode;
    return this;
  }

  /**
   * The unique code of the bank. See Bank list to check the valid values.
   * @return bankIdentifierCode
   */
  @ApiModelProperty(value = "The unique code of the bank. See Bank list to check the valid values.")
  @JsonProperty(JSON_PROPERTY_BANK_IDENTIFIER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBankIdentifierCode() {
    return bankIdentifierCode;
  }

  /**
   * The unique code of the bank. See Bank list to check the valid values.
   *
   * @param bankIdentifierCode
   */ 
  @JsonProperty(JSON_PROPERTY_BANK_IDENTIFIER_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankIdentifierCode(String bankIdentifierCode) {
    this.bankIdentifierCode = bankIdentifierCode;
  }

  /**
   * The short name of the bank. The unique code of the bank. See Bank list to check the valid values.
   *
   * @param bankShortName
   * @return the current {@code SupportBank} instance, allowing for method chaining
   */
  public SupportBank bankShortName(String bankShortName) {
    this.bankShortName = bankShortName;
    return this;
  }

  /**
   * The short name of the bank. The unique code of the bank. See Bank list to check the valid values.
   * @return bankShortName
   */
  @ApiModelProperty(value = "The short name of the bank. The unique code of the bank. See Bank list to check the valid values.")
  @JsonProperty(JSON_PROPERTY_BANK_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getBankShortName() {
    return bankShortName;
  }

  /**
   * The short name of the bank. The unique code of the bank. See Bank list to check the valid values.
   *
   * @param bankShortName
   */ 
  @JsonProperty(JSON_PROPERTY_BANK_SHORT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankShortName(String bankShortName) {
    this.bankShortName = bankShortName;
  }

  /**
   * bankLogo
   *
   * @param bankLogo
   * @return the current {@code SupportBank} instance, allowing for method chaining
   */
  public SupportBank bankLogo(Logo bankLogo) {
    this.bankLogo = bankLogo;
    return this;
  }

  /**
   * bankLogo
   * @return bankLogo
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BANK_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Logo getBankLogo() {
    return bankLogo;
  }

  /**
   * bankLogo
   *
   * @param bankLogo
   */ 
  @JsonProperty(JSON_PROPERTY_BANK_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBankLogo(Logo bankLogo) {
    this.bankLogo = bankLogo;
  }

  /**
   * Return true if this SupportBank object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupportBank supportBank = (SupportBank) o;
    return Objects.equals(this.bankIdentifierCode, supportBank.bankIdentifierCode) &&
        Objects.equals(this.bankShortName, supportBank.bankShortName) &&
        Objects.equals(this.bankLogo, supportBank.bankLogo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankIdentifierCode, bankShortName, bankLogo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupportBank {\n");
    sb.append("    bankIdentifierCode: ").append(toIndentedString(bankIdentifierCode)).append("\n");
    sb.append("    bankShortName: ").append(toIndentedString(bankShortName)).append("\n");
    sb.append("    bankLogo: ").append(toIndentedString(bankLogo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of SupportBank given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SupportBank
   * @throws JsonProcessingException if the JSON string is invalid with respect to SupportBank
   */
  public static SupportBank fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, SupportBank.class);
  }
/**
  * Convert an instance of SupportBank to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
