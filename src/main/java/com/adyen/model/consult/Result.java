/*
 * Payment API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.consult;

//model

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * Result
 */
@JsonPropertyOrder({
  Result.JSON_PROPERTY_RESULT_CODE,
  Result.JSON_PROPERTY_RESULT_STATUS,
  Result.JSON_PROPERTY_RESULT_MESSAGE
})
//pojo

public class Result {
  public static final String JSON_PROPERTY_RESULT_CODE = "resultCode";
  private String resultCode;

  /**
   * The result status. Valid values are:
   */
  public enum ResultStatusEnum {
    S("S"),
    
    F("F"),
    
    U("U");

    private String value;

    ResultStatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResultStatusEnum fromValue(String value) {
      for (ResultStatusEnum b : ResultStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RESULT_STATUS = "resultStatus";
  private ResultStatusEnum resultStatus;

  public static final String JSON_PROPERTY_RESULT_MESSAGE = "resultMessage";
  private String resultMessage;

  public Result() { 
  }

  /**
   * The result code.
   *
   * @param resultCode
   * @return the current {@code Result} instance, allowing for method chaining
   */
  public Result resultCode(String resultCode) {
    this.resultCode = resultCode;
    return this;
  }

  /**
   * The result code.
   * @return resultCode
   */
  @ApiModelProperty(required = true, value = "The result code.")
  @JsonProperty(JSON_PROPERTY_RESULT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getResultCode() {
    return resultCode;
  }

  /**
   * The result code.
   *
   * @param resultCode
   */ 
  @JsonProperty(JSON_PROPERTY_RESULT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResultCode(String resultCode) {
    this.resultCode = resultCode;
  }

  /**
   * The result status. Valid values are:
   *
   * @param resultStatus
   * @return the current {@code Result} instance, allowing for method chaining
   */
  public Result resultStatus(ResultStatusEnum resultStatus) {
    this.resultStatus = resultStatus;
    return this;
  }

  /**
   * The result status. Valid values are:
   * @return resultStatus
   */
  @ApiModelProperty(required = true, value = "The result status. Valid values are:")
  @JsonProperty(JSON_PROPERTY_RESULT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ResultStatusEnum getResultStatus() {
    return resultStatus;
  }

  /**
   * The result status. Valid values are:
   *
   * @param resultStatus
   */ 
  @JsonProperty(JSON_PROPERTY_RESULT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResultStatus(ResultStatusEnum resultStatus) {
    this.resultStatus = resultStatus;
  }

  /**
   * The result message.
   *
   * @param resultMessage
   * @return the current {@code Result} instance, allowing for method chaining
   */
  public Result resultMessage(String resultMessage) {
    this.resultMessage = resultMessage;
    return this;
  }

  /**
   * The result message.
   * @return resultMessage
   */
  @ApiModelProperty(value = "The result message.")
  @JsonProperty(JSON_PROPERTY_RESULT_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getResultMessage() {
    return resultMessage;
  }

  /**
   * The result message.
   *
   * @param resultMessage
   */ 
  @JsonProperty(JSON_PROPERTY_RESULT_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResultMessage(String resultMessage) {
    this.resultMessage = resultMessage;
  }

  /**
   * Return true if this Result object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Result result = (Result) o;
    return Objects.equals(this.resultCode, result.resultCode) &&
        Objects.equals(this.resultStatus, result.resultStatus) &&
        Objects.equals(this.resultMessage, result.resultMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(resultCode, resultStatus, resultMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Result {\n");
    sb.append("    resultCode: ").append(toIndentedString(resultCode)).append("\n");
    sb.append("    resultStatus: ").append(toIndentedString(resultStatus)).append("\n");
    sb.append("    resultMessage: ").append(toIndentedString(resultMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of Result given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Result
   * @throws JsonProcessingException if the JSON string is invalid with respect to Result
   */
  public static Result fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, Result.class);
  }
/**
  * Convert an instance of Result to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
