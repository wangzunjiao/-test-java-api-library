/*
 * Payment API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.consult;

//model

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.consult.Installment;
import com.adyen.model.consult.Logo;
import com.adyen.model.consult.PaymentOptionDetail;
import com.adyen.model.consult.PromotionInfo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * PaymentOption
 */
@JsonPropertyOrder({
  PaymentOption.JSON_PROPERTY_PAYMENT_METHOD_TYPE,
  PaymentOption.JSON_PROPERTY_PAYMENT_METHOD_CATEGORY,
  PaymentOption.JSON_PROPERTY_PAYMENT_METHOD_REGION,
  PaymentOption.JSON_PROPERTY_PAYMENT_OPTION_DETAIL,
  PaymentOption.JSON_PROPERTY_ENABLED,
  PaymentOption.JSON_PROPERTY_DISABLE_REASON,
  PaymentOption.JSON_PROPERTY_LOGO,
  PaymentOption.JSON_PROPERTY_PROMO_NAMES,
  PaymentOption.JSON_PROPERTY_INSTALLMENT,
  PaymentOption.JSON_PROPERTY_PROMOTION_INFOS
})
//pojo

public class PaymentOption {
  public static final String JSON_PROPERTY_PAYMENT_METHOD_TYPE = "paymentMethodType";
  private String paymentMethodType;

  /**
   * The category of the payment method. Valid values are:
   */
  public enum PaymentMethodCategoryEnum {
    ALIPAY_PLUS("ALIPAY_PLUS"),
    
    WALLET("WALLET"),
    
    MOBILE_BANKING_APP("MOBILE_BANKING_APP"),
    
    BANK_TRANSFER("BANK_TRANSFER"),
    
    ONLINE_BANKING("ONLINE_BANKING"),
    
    CARD("CARD"),
    
    OTC("OTC");

    private String value;

    PaymentMethodCategoryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PaymentMethodCategoryEnum fromValue(String value) {
      for (PaymentMethodCategoryEnum b : PaymentMethodCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PAYMENT_METHOD_CATEGORY = "paymentMethodCategory";
  private PaymentMethodCategoryEnum paymentMethodCategory;

  public static final String JSON_PROPERTY_PAYMENT_METHOD_REGION = "paymentMethodRegion";
  private String paymentMethodRegion;

  public static final String JSON_PROPERTY_PAYMENT_OPTION_DETAIL = "paymentOptionDetail";
  private PaymentOptionDetail paymentOptionDetail;

  public static final String JSON_PROPERTY_ENABLED = "enabled";
  private Boolean enabled;

  /**
   * The payment method type. See Payment methods to check the valid values.
   */
  public enum DisableReasonEnum {
    PAYMENT_ACCOUNT_NOT_AVAILABLE("PAYMENT_ACCOUNT_NOT_AVAILABLE"),
    
    EXCEED_CHANNEL_LIMIT_RULE("EXCEED_CHANNEL_LIMIT_RULE"),
    
    SERVICE_DEGRADE("SERVICE_DEGRADE"),
    
    CHANNEL_NOT_SUPPORT_CURRENCY("CHANNEL_NOT_SUPPORT_CURRENCY"),
    
    CHANNEL_DISABLE("CHANNEL_DISABLE"),
    
    CHANNEL_NOT_IN_SERVICE_TIME("CHANNEL_NOT_IN_SERVICE_TIME"),
    
    QUERY_IPP_INFO_FAILED("QUERY_IPP_INFO_FAILED"),
    
    LIMIT_CENTER_ACCESS_FAIL("LIMIT_CENTER_ACCESS_FAIL"),
    
    CURRENT_CHANNEL_NOT_EXIST("CURRENT_CHANNEL_NOT_EXIST");

    private String value;

    DisableReasonEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DisableReasonEnum fromValue(String value) {
      for (DisableReasonEnum b : DisableReasonEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_DISABLE_REASON = "disableReason";
  private DisableReasonEnum disableReason;

  public static final String JSON_PROPERTY_LOGO = "logo";
  private Logo logo;

  public static final String JSON_PROPERTY_PROMO_NAMES = "promoNames";
  private List<String> promoNames = null;

  public static final String JSON_PROPERTY_INSTALLMENT = "installment";
  private Installment installment;

  public static final String JSON_PROPERTY_PROMOTION_INFOS = "promotionInfos";
  private List<PromotionInfo> promotionInfos = null;

  public PaymentOption() { 
  }

  /**
   * The payment method type. See Payment methods to check the valid values.
   *
   * @param paymentMethodType
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption paymentMethodType(String paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
    return this;
  }

  /**
   * The payment method type. See Payment methods to check the valid values.
   * @return paymentMethodType
   */
  @ApiModelProperty(value = "The payment method type. See Payment methods to check the valid values.")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPaymentMethodType() {
    return paymentMethodType;
  }

  /**
   * The payment method type. See Payment methods to check the valid values.
   *
   * @param paymentMethodType
   */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethodType(String paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }

  /**
   * The category of the payment method. Valid values are:
   *
   * @param paymentMethodCategory
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption paymentMethodCategory(PaymentMethodCategoryEnum paymentMethodCategory) {
    this.paymentMethodCategory = paymentMethodCategory;
    return this;
  }

  /**
   * The category of the payment method. Valid values are:
   * @return paymentMethodCategory
   */
  @ApiModelProperty(value = "The category of the payment method. Valid values are:")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentMethodCategoryEnum getPaymentMethodCategory() {
    return paymentMethodCategory;
  }

  /**
   * The category of the payment method. Valid values are:
   *
   * @param paymentMethodCategory
   */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethodCategory(PaymentMethodCategoryEnum paymentMethodCategory) {
    this.paymentMethodCategory = paymentMethodCategory;
  }

  /**
   * A list of region codes that represent the countries or regions of payment methods. The value of this parameter is a 2-letter ISO country code or GLOBAL
   *
   * @param paymentMethodRegion
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption paymentMethodRegion(String paymentMethodRegion) {
    this.paymentMethodRegion = paymentMethodRegion;
    return this;
  }

  /**
   * A list of region codes that represent the countries or regions of payment methods. The value of this parameter is a 2-letter ISO country code or GLOBAL
   * @return paymentMethodRegion
   */
  @ApiModelProperty(value = "A list of region codes that represent the countries or regions of payment methods. The value of this parameter is a 2-letter ISO country code or GLOBAL")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPaymentMethodRegion() {
    return paymentMethodRegion;
  }

  /**
   * A list of region codes that represent the countries or regions of payment methods. The value of this parameter is a 2-letter ISO country code or GLOBAL
   *
   * @param paymentMethodRegion
   */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethodRegion(String paymentMethodRegion) {
    this.paymentMethodRegion = paymentMethodRegion;
  }

  /**
   * paymentOptionDetail
   *
   * @param paymentOptionDetail
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption paymentOptionDetail(PaymentOptionDetail paymentOptionDetail) {
    this.paymentOptionDetail = paymentOptionDetail;
    return this;
  }

  /**
   * paymentOptionDetail
   * @return paymentOptionDetail
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_OPTION_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentOptionDetail getPaymentOptionDetail() {
    return paymentOptionDetail;
  }

  /**
   * paymentOptionDetail
   *
   * @param paymentOptionDetail
   */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_OPTION_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentOptionDetail(PaymentOptionDetail paymentOptionDetail) {
    this.paymentOptionDetail = paymentOptionDetail;
  }

  /**
   * Indicates whether the payment method is available.
   *
   * @param enabled
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Indicates whether the payment method is available.
   * @return enabled
   */
  @ApiModelProperty(value = "Indicates whether the payment method is available.")
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getEnabled() {
    return enabled;
  }

  /**
   * Indicates whether the payment method is available.
   *
   * @param enabled
   */ 
  @JsonProperty(JSON_PROPERTY_ENABLED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  /**
   * The payment method type. See Payment methods to check the valid values.
   *
   * @param disableReason
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption disableReason(DisableReasonEnum disableReason) {
    this.disableReason = disableReason;
    return this;
  }

  /**
   * The payment method type. See Payment methods to check the valid values.
   * @return disableReason
   */
  @ApiModelProperty(value = "The payment method type. See Payment methods to check the valid values.")
  @JsonProperty(JSON_PROPERTY_DISABLE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public DisableReasonEnum getDisableReason() {
    return disableReason;
  }

  /**
   * The payment method type. See Payment methods to check the valid values.
   *
   * @param disableReason
   */ 
  @JsonProperty(JSON_PROPERTY_DISABLE_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableReason(DisableReasonEnum disableReason) {
    this.disableReason = disableReason;
  }

  /**
   * logo
   *
   * @param logo
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption logo(Logo logo) {
    this.logo = logo;
    return this;
  }

  /**
   * logo
   * @return logo
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Logo getLogo() {
    return logo;
  }

  /**
   * logo
   *
   * @param logo
   */ 
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogo(Logo logo) {
    this.logo = logo;
  }

  /**
   * The list of the promotion names. In JSON format. The keys are returned as a language and a country code, connected by an underscore, such as zh_CN, while the value is the promotion name, such as RM1 Voucher.
   *
   * @param promoNames
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption promoNames(List<String> promoNames) {
    this.promoNames = promoNames;
    return this;
  }

  public PaymentOption addPromoNamesItem(String promoNamesItem) {
    if (this.promoNames == null) {
      this.promoNames = new ArrayList<>();
    }
    this.promoNames.add(promoNamesItem);
    return this;
  }

  /**
   * The list of the promotion names. In JSON format. The keys are returned as a language and a country code, connected by an underscore, such as zh_CN, while the value is the promotion name, such as RM1 Voucher.
   * @return promoNames
   */
  @ApiModelProperty(value = "The list of the promotion names. In JSON format. The keys are returned as a language and a country code, connected by an underscore, such as zh_CN, while the value is the promotion name, such as RM1 Voucher.")
  @JsonProperty(JSON_PROPERTY_PROMO_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getPromoNames() {
    return promoNames;
  }

  /**
   * The list of the promotion names. In JSON format. The keys are returned as a language and a country code, connected by an underscore, such as zh_CN, while the value is the promotion name, such as RM1 Voucher.
   *
   * @param promoNames
   */ 
  @JsonProperty(JSON_PROPERTY_PROMO_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPromoNames(List<String> promoNames) {
    this.promoNames = promoNames;
  }

  /**
   * installment
   *
   * @param installment
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption installment(Installment installment) {
    this.installment = installment;
    return this;
  }

  /**
   * installment
   * @return installment
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INSTALLMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Installment getInstallment() {
    return installment;
  }

  /**
   * installment
   *
   * @param installment
   */ 
  @JsonProperty(JSON_PROPERTY_INSTALLMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInstallment(Installment installment) {
    this.installment = installment;
  }

  /**
   * The payment method type. See Payment methods to check the valid values.
   *
   * @param promotionInfos
   * @return the current {@code PaymentOption} instance, allowing for method chaining
   */
  public PaymentOption promotionInfos(List<PromotionInfo> promotionInfos) {
    this.promotionInfos = promotionInfos;
    return this;
  }

  public PaymentOption addPromotionInfosItem(PromotionInfo promotionInfosItem) {
    if (this.promotionInfos == null) {
      this.promotionInfos = new ArrayList<>();
    }
    this.promotionInfos.add(promotionInfosItem);
    return this;
  }

  /**
   * The payment method type. See Payment methods to check the valid values.
   * @return promotionInfos
   */
  @ApiModelProperty(value = "The payment method type. See Payment methods to check the valid values.")
  @JsonProperty(JSON_PROPERTY_PROMOTION_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<PromotionInfo> getPromotionInfos() {
    return promotionInfos;
  }

  /**
   * The payment method type. See Payment methods to check the valid values.
   *
   * @param promotionInfos
   */ 
  @JsonProperty(JSON_PROPERTY_PROMOTION_INFOS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPromotionInfos(List<PromotionInfo> promotionInfos) {
    this.promotionInfos = promotionInfos;
  }

  /**
   * Return true if this PaymentOption object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentOption paymentOption = (PaymentOption) o;
    return Objects.equals(this.paymentMethodType, paymentOption.paymentMethodType) &&
        Objects.equals(this.paymentMethodCategory, paymentOption.paymentMethodCategory) &&
        Objects.equals(this.paymentMethodRegion, paymentOption.paymentMethodRegion) &&
        Objects.equals(this.paymentOptionDetail, paymentOption.paymentOptionDetail) &&
        Objects.equals(this.enabled, paymentOption.enabled) &&
        Objects.equals(this.disableReason, paymentOption.disableReason) &&
        Objects.equals(this.logo, paymentOption.logo) &&
        Objects.equals(this.promoNames, paymentOption.promoNames) &&
        Objects.equals(this.installment, paymentOption.installment) &&
        Objects.equals(this.promotionInfos, paymentOption.promotionInfos);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethodType, paymentMethodCategory, paymentMethodRegion, paymentOptionDetail, enabled, disableReason, logo, promoNames, installment, promotionInfos);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentOption {\n");
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("    paymentMethodCategory: ").append(toIndentedString(paymentMethodCategory)).append("\n");
    sb.append("    paymentMethodRegion: ").append(toIndentedString(paymentMethodRegion)).append("\n");
    sb.append("    paymentOptionDetail: ").append(toIndentedString(paymentOptionDetail)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    disableReason: ").append(toIndentedString(disableReason)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    promoNames: ").append(toIndentedString(promoNames)).append("\n");
    sb.append("    installment: ").append(toIndentedString(installment)).append("\n");
    sb.append("    promotionInfos: ").append(toIndentedString(promotionInfos)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PaymentOption given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentOption
   * @throws JsonProcessingException if the JSON string is invalid with respect to PaymentOption
   */
  public static PaymentOption fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PaymentOption.class);
  }
/**
  * Convert an instance of PaymentOption to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
