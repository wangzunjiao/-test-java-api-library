/*
 * Payment API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.consult;

//model

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.consult.Logo;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * SupportCardBrand
 */
@JsonPropertyOrder({
  SupportCardBrand.JSON_PROPERTY_CARD_BRAND,
  SupportCardBrand.JSON_PROPERTY_LOGO
})
//pojo

public class SupportCardBrand {
  /**
   * The name of the card brand. Valid values are:
   */
  public enum CardBrandEnum {
    VISA("VISA"),
    
    MASTERCARD("MASTERCARD"),
    
    AMEX("AMEX"),
    
    HIPERCARD("HIPERCARD"),
    
    ELO("ELO");

    private String value;

    CardBrandEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CardBrandEnum fromValue(String value) {
      for (CardBrandEnum b : CardBrandEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CARD_BRAND = "cardBrand";
  private CardBrandEnum cardBrand;

  public static final String JSON_PROPERTY_LOGO = "logo";
  private Logo logo;

  public SupportCardBrand() { 
  }

  /**
   * The name of the card brand. Valid values are:
   *
   * @param cardBrand
   * @return the current {@code SupportCardBrand} instance, allowing for method chaining
   */
  public SupportCardBrand cardBrand(CardBrandEnum cardBrand) {
    this.cardBrand = cardBrand;
    return this;
  }

  /**
   * The name of the card brand. Valid values are:
   * @return cardBrand
   */
  @ApiModelProperty(value = "The name of the card brand. Valid values are:")
  @JsonProperty(JSON_PROPERTY_CARD_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CardBrandEnum getCardBrand() {
    return cardBrand;
  }

  /**
   * The name of the card brand. Valid values are:
   *
   * @param cardBrand
   */ 
  @JsonProperty(JSON_PROPERTY_CARD_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardBrand(CardBrandEnum cardBrand) {
    this.cardBrand = cardBrand;
  }

  /**
   * logo
   *
   * @param logo
   * @return the current {@code SupportCardBrand} instance, allowing for method chaining
   */
  public SupportCardBrand logo(Logo logo) {
    this.logo = logo;
    return this;
  }

  /**
   * logo
   * @return logo
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Logo getLogo() {
    return logo;
  }

  /**
   * logo
   *
   * @param logo
   */ 
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogo(Logo logo) {
    this.logo = logo;
  }

  /**
   * Return true if this SupportCardBrand object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupportCardBrand supportCardBrand = (SupportCardBrand) o;
    return Objects.equals(this.cardBrand, supportCardBrand.cardBrand) &&
        Objects.equals(this.logo, supportCardBrand.logo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardBrand, logo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupportCardBrand {\n");
    sb.append("    cardBrand: ").append(toIndentedString(cardBrand)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of SupportCardBrand given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SupportCardBrand
   * @throws JsonProcessingException if the JSON string is invalid with respect to SupportCardBrand
   */
  public static SupportCardBrand fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, SupportCardBrand.class);
  }
/**
  * Convert an instance of SupportCardBrand to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
