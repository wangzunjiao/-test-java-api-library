/*
 * Payment API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.consult;

//model

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.consult.Buyer;
import com.adyen.model.consult.Env;
import com.adyen.model.consult.PaymentAmount;
import com.adyen.model.consult.PaymentFactor;
import com.adyen.model.consult.SettlementStrategy;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * PayConsultRequest
 */
@JsonPropertyOrder({
  PayConsultRequest.JSON_PROPERTY_PRODUCT_CODE,
  PayConsultRequest.JSON_PROPERTY_PAYMENT_AMOUNT,
  PayConsultRequest.JSON_PROPERTY_USER_REGION,
  PayConsultRequest.JSON_PROPERTY_MERCHANT_REGION,
  PayConsultRequest.JSON_PROPERTY_SETTLEMENT_STRATEGY,
  PayConsultRequest.JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_REGIONS,
  PayConsultRequest.JSON_PROPERTY_ENV,
  PayConsultRequest.JSON_PROPERTY_BUYER,
  PayConsultRequest.JSON_PROPERTY_MERCHANT_ACCOUNT_ID,
  PayConsultRequest.JSON_PROPERTY_PAYMENT_FACTOR
})
//pojo

public class PayConsultRequest {
  /**
   * Represents the payment product that is being used. The payment product that can be used is stipulated in the contract. The fixed value is:
   */
  public enum ProductCodeEnum {
    CASHIER_PAYMENT("CASHIER_PAYMENT");

    private String value;

    ProductCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProductCodeEnum fromValue(String value) {
      for (ProductCodeEnum b : ProductCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PRODUCT_CODE = "productCode";
  private ProductCodeEnum productCode;

  public static final String JSON_PROPERTY_PAYMENT_AMOUNT = "paymentAmount";
  private PaymentAmount paymentAmount;

  public static final String JSON_PROPERTY_USER_REGION = "userRegion";
  private String userRegion;

  public static final String JSON_PROPERTY_MERCHANT_REGION = "merchantRegion";
  private String merchantRegion;

  public static final String JSON_PROPERTY_SETTLEMENT_STRATEGY = "settlementStrategy";
  private SettlementStrategy settlementStrategy;

  public static final String JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_REGIONS = "allowedPaymentMethodRegions";
  private List<String> allowedPaymentMethodRegions = null;

  public static final String JSON_PROPERTY_ENV = "env";
  private Env env;

  public static final String JSON_PROPERTY_BUYER = "buyer";
  private Buyer buyer;

  public static final String JSON_PROPERTY_MERCHANT_ACCOUNT_ID = "merchantAccountId";
  private String merchantAccountId;

  public static final String JSON_PROPERTY_PAYMENT_FACTOR = "paymentFactor";
  private PaymentFactor paymentFactor;

  public PayConsultRequest() { 
  }

  /**
   * Represents the payment product that is being used. The payment product that can be used is stipulated in the contract. The fixed value is:
   *
   * @param productCode
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest productCode(ProductCodeEnum productCode) {
    this.productCode = productCode;
    return this;
  }

  /**
   * Represents the payment product that is being used. The payment product that can be used is stipulated in the contract. The fixed value is:
   * @return productCode
   */
  @ApiModelProperty(required = true, value = "Represents the payment product that is being used. The payment product that can be used is stipulated in the contract. The fixed value is:")
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ProductCodeEnum getProductCode() {
    return productCode;
  }

  /**
   * Represents the payment product that is being used. The payment product that can be used is stipulated in the contract. The fixed value is:
   *
   * @param productCode
   */ 
  @JsonProperty(JSON_PROPERTY_PRODUCT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductCode(ProductCodeEnum productCode) {
    this.productCode = productCode;
  }

  /**
   * paymentAmount
   *
   * @param paymentAmount
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest paymentAmount(PaymentAmount paymentAmount) {
    this.paymentAmount = paymentAmount;
    return this;
  }

  /**
   * paymentAmount
   * @return paymentAmount
   */
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentAmount getPaymentAmount() {
    return paymentAmount;
  }

  /**
   * paymentAmount
   *
   * @param paymentAmount
   */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentAmount(PaymentAmount paymentAmount) {
    this.paymentAmount = paymentAmount;
  }

  /**
   * The 2-letter country or region code. For more information, see ISO 3166 Country Codes standard. The payment methods will be sorted based on payment method relevance for the given user&#39;s region.
   *
   * @param userRegion
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest userRegion(String userRegion) {
    this.userRegion = userRegion;
    return this;
  }

  /**
   * The 2-letter country or region code. For more information, see ISO 3166 Country Codes standard. The payment methods will be sorted based on payment method relevance for the given user&#39;s region.
   * @return userRegion
   */
  @ApiModelProperty(value = "The 2-letter country or region code. For more information, see ISO 3166 Country Codes standard. The payment methods will be sorted based on payment method relevance for the given user's region.")
  @JsonProperty(JSON_PROPERTY_USER_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getUserRegion() {
    return userRegion;
  }

  /**
   * The 2-letter country or region code. For more information, see ISO 3166 Country Codes standard. The payment methods will be sorted based on payment method relevance for the given user&#39;s region.
   *
   * @param userRegion
   */ 
  @JsonProperty(JSON_PROPERTY_USER_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserRegion(String userRegion) {
    this.userRegion = userRegion;
  }

  /**
   * The country or region where the merchant operates the business. The parameter is a 2-letter country or region code that follows ISO 3166 Country Codes standard.
   *
   * @param merchantRegion
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest merchantRegion(String merchantRegion) {
    this.merchantRegion = merchantRegion;
    return this;
  }

  /**
   * The country or region where the merchant operates the business. The parameter is a 2-letter country or region code that follows ISO 3166 Country Codes standard.
   * @return merchantRegion
   */
  @ApiModelProperty(value = "The country or region where the merchant operates the business. The parameter is a 2-letter country or region code that follows ISO 3166 Country Codes standard.")
  @JsonProperty(JSON_PROPERTY_MERCHANT_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMerchantRegion() {
    return merchantRegion;
  }

  /**
   * The country or region where the merchant operates the business. The parameter is a 2-letter country or region code that follows ISO 3166 Country Codes standard.
   *
   * @param merchantRegion
   */ 
  @JsonProperty(JSON_PROPERTY_MERCHANT_REGION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantRegion(String merchantRegion) {
    this.merchantRegion = merchantRegion;
  }

  /**
   * settlementStrategy
   *
   * @param settlementStrategy
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest settlementStrategy(SettlementStrategy settlementStrategy) {
    this.settlementStrategy = settlementStrategy;
    return this;
  }

  /**
   * settlementStrategy
   * @return settlementStrategy
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SETTLEMENT_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SettlementStrategy getSettlementStrategy() {
    return settlementStrategy;
  }

  /**
   * settlementStrategy
   *
   * @param settlementStrategy
   */ 
  @JsonProperty(JSON_PROPERTY_SETTLEMENT_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSettlementStrategy(SettlementStrategy settlementStrategy) {
    this.settlementStrategy = settlementStrategy;
  }

  /**
   * A list of region codes that represent the countries or regions of payment methods. The value of this parameter is a 2-letter ISO country code or GLOBAL.   Specify this parameter if you want available payment methods from specific regions to be returned. For example, if you pass in GLOBAL, global cards Visa and Mastercard are returned.
   *
   * @param allowedPaymentMethodRegions
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest allowedPaymentMethodRegions(List<String> allowedPaymentMethodRegions) {
    this.allowedPaymentMethodRegions = allowedPaymentMethodRegions;
    return this;
  }

  public PayConsultRequest addAllowedPaymentMethodRegionsItem(String allowedPaymentMethodRegionsItem) {
    if (this.allowedPaymentMethodRegions == null) {
      this.allowedPaymentMethodRegions = new ArrayList<>();
    }
    this.allowedPaymentMethodRegions.add(allowedPaymentMethodRegionsItem);
    return this;
  }

  /**
   * A list of region codes that represent the countries or regions of payment methods. The value of this parameter is a 2-letter ISO country code or GLOBAL.   Specify this parameter if you want available payment methods from specific regions to be returned. For example, if you pass in GLOBAL, global cards Visa and Mastercard are returned.
   * @return allowedPaymentMethodRegions
   */
  @ApiModelProperty(value = "A list of region codes that represent the countries or regions of payment methods. The value of this parameter is a 2-letter ISO country code or GLOBAL.   Specify this parameter if you want available payment methods from specific regions to be returned. For example, if you pass in GLOBAL, global cards Visa and Mastercard are returned.")
  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getAllowedPaymentMethodRegions() {
    return allowedPaymentMethodRegions;
  }

  /**
   * A list of region codes that represent the countries or regions of payment methods. The value of this parameter is a 2-letter ISO country code or GLOBAL.   Specify this parameter if you want available payment methods from specific regions to be returned. For example, if you pass in GLOBAL, global cards Visa and Mastercard are returned.
   *
   * @param allowedPaymentMethodRegions
   */ 
  @JsonProperty(JSON_PROPERTY_ALLOWED_PAYMENT_METHOD_REGIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowedPaymentMethodRegions(List<String> allowedPaymentMethodRegions) {
    this.allowedPaymentMethodRegions = allowedPaymentMethodRegions;
  }

  /**
   * env
   *
   * @param env
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest env(Env env) {
    this.env = env;
    return this;
  }

  /**
   * env
   * @return env
   */
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Env getEnv() {
    return env;
  }

  /**
   * env
   *
   * @param env
   */ 
  @JsonProperty(JSON_PROPERTY_ENV)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnv(Env env) {
    this.env = env;
  }

  /**
   * buyer
   *
   * @param buyer
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest buyer(Buyer buyer) {
    this.buyer = buyer;
    return this;
  }

  /**
   * buyer
   * @return buyer
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BUYER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Buyer getBuyer() {
    return buyer;
  }

  /**
   * buyer
   *
   * @param buyer
   */ 
  @JsonProperty(JSON_PROPERTY_BUYER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBuyer(Buyer buyer) {
    this.buyer = buyer;
  }

  /**
   * The unique ID to identify a merchant account.  Specify this parameter when you use a single client ID across multiple locations.  More information about this field
   *
   * @param merchantAccountId
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest merchantAccountId(String merchantAccountId) {
    this.merchantAccountId = merchantAccountId;
    return this;
  }

  /**
   * The unique ID to identify a merchant account.  Specify this parameter when you use a single client ID across multiple locations.  More information about this field
   * @return merchantAccountId
   */
  @ApiModelProperty(value = "The unique ID to identify a merchant account.  Specify this parameter when you use a single client ID across multiple locations.  More information about this field")
  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMerchantAccountId() {
    return merchantAccountId;
  }

  /**
   * The unique ID to identify a merchant account.  Specify this parameter when you use a single client ID across multiple locations.  More information about this field
   *
   * @param merchantAccountId
   */ 
  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantAccountId(String merchantAccountId) {
    this.merchantAccountId = merchantAccountId;
  }

  /**
   * paymentFactor
   *
   * @param paymentFactor
   * @return the current {@code PayConsultRequest} instance, allowing for method chaining
   */
  public PayConsultRequest paymentFactor(PaymentFactor paymentFactor) {
    this.paymentFactor = paymentFactor;
    return this;
  }

  /**
   * paymentFactor
   * @return paymentFactor
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentFactor getPaymentFactor() {
    return paymentFactor;
  }

  /**
   * paymentFactor
   *
   * @param paymentFactor
   */ 
  @JsonProperty(JSON_PROPERTY_PAYMENT_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentFactor(PaymentFactor paymentFactor) {
    this.paymentFactor = paymentFactor;
  }

  /**
   * Return true if this PayConsultRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayConsultRequest payConsultRequest = (PayConsultRequest) o;
    return Objects.equals(this.productCode, payConsultRequest.productCode) &&
        Objects.equals(this.paymentAmount, payConsultRequest.paymentAmount) &&
        Objects.equals(this.userRegion, payConsultRequest.userRegion) &&
        Objects.equals(this.merchantRegion, payConsultRequest.merchantRegion) &&
        Objects.equals(this.settlementStrategy, payConsultRequest.settlementStrategy) &&
        Objects.equals(this.allowedPaymentMethodRegions, payConsultRequest.allowedPaymentMethodRegions) &&
        Objects.equals(this.env, payConsultRequest.env) &&
        Objects.equals(this.buyer, payConsultRequest.buyer) &&
        Objects.equals(this.merchantAccountId, payConsultRequest.merchantAccountId) &&
        Objects.equals(this.paymentFactor, payConsultRequest.paymentFactor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productCode, paymentAmount, userRegion, merchantRegion, settlementStrategy, allowedPaymentMethodRegions, env, buyer, merchantAccountId, paymentFactor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayConsultRequest {\n");
    sb.append("    productCode: ").append(toIndentedString(productCode)).append("\n");
    sb.append("    paymentAmount: ").append(toIndentedString(paymentAmount)).append("\n");
    sb.append("    userRegion: ").append(toIndentedString(userRegion)).append("\n");
    sb.append("    merchantRegion: ").append(toIndentedString(merchantRegion)).append("\n");
    sb.append("    settlementStrategy: ").append(toIndentedString(settlementStrategy)).append("\n");
    sb.append("    allowedPaymentMethodRegions: ").append(toIndentedString(allowedPaymentMethodRegions)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("    merchantAccountId: ").append(toIndentedString(merchantAccountId)).append("\n");
    sb.append("    paymentFactor: ").append(toIndentedString(paymentFactor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PayConsultRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PayConsultRequest
   * @throws JsonProcessingException if the JSON string is invalid with respect to PayConsultRequest
   */
  public static PayConsultRequest fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PayConsultRequest.class);
  }
/**
  * Convert an instance of PayConsultRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
