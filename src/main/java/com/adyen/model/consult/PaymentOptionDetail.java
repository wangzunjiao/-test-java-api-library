/*
 * Payment API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.adyen.model.consult;

//model

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.adyen.model.consult.Logo;
import com.adyen.model.consult.SupportBank;
import com.adyen.model.consult.SupportCardBrand;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.core.JsonProcessingException;


/**
 * PaymentOptionDetail
 */
@JsonPropertyOrder({
  PaymentOptionDetail.JSON_PROPERTY_SUPPORT_CARD_BRANDS,
  PaymentOptionDetail.JSON_PROPERTY_LOGO,
  PaymentOptionDetail.JSON_PROPERTY_FUNDING,
  PaymentOptionDetail.JSON_PROPERTY_SUPPORT_BANKS
})
//pojo

public class PaymentOptionDetail {
  public static final String JSON_PROPERTY_SUPPORT_CARD_BRANDS = "supportCardBrands";
  private List<SupportCardBrand> supportCardBrands = null;

  public static final String JSON_PROPERTY_LOGO = "logo";
  private Logo logo;

  /**
   * Gets or Sets funding
   */
  public enum FundingEnum {
    CREDIT("CREDIT"),
    
    DEBIT("DEBIT"),
    
    PREPAID("PREPAID"),
    
    CHARGE("CHARGE"),
    
    DEFERRED_DEBIT("DEFERRED_DEBIT");

    private String value;

    FundingEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FundingEnum fromValue(String value) {
      for (FundingEnum b : FundingEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FUNDING = "funding";
  private List<FundingEnum> funding = null;

  public static final String JSON_PROPERTY_SUPPORT_BANKS = "supportBanks";
  private SupportBank supportBanks;

  public PaymentOptionDetail() { 
  }

  /**
   * The list of supported card brands.    This parameter is returned when the value of paymentMethodType is CARD.
   *
   * @param supportCardBrands
   * @return the current {@code PaymentOptionDetail} instance, allowing for method chaining
   */
  public PaymentOptionDetail supportCardBrands(List<SupportCardBrand> supportCardBrands) {
    this.supportCardBrands = supportCardBrands;
    return this;
  }

  public PaymentOptionDetail addSupportCardBrandsItem(SupportCardBrand supportCardBrandsItem) {
    if (this.supportCardBrands == null) {
      this.supportCardBrands = new ArrayList<>();
    }
    this.supportCardBrands.add(supportCardBrandsItem);
    return this;
  }

  /**
   * The list of supported card brands.    This parameter is returned when the value of paymentMethodType is CARD.
   * @return supportCardBrands
   */
  @ApiModelProperty(value = "The list of supported card brands.    This parameter is returned when the value of paymentMethodType is CARD.")
  @JsonProperty(JSON_PROPERTY_SUPPORT_CARD_BRANDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<SupportCardBrand> getSupportCardBrands() {
    return supportCardBrands;
  }

  /**
   * The list of supported card brands.    This parameter is returned when the value of paymentMethodType is CARD.
   *
   * @param supportCardBrands
   */ 
  @JsonProperty(JSON_PROPERTY_SUPPORT_CARD_BRANDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportCardBrands(List<SupportCardBrand> supportCardBrands) {
    this.supportCardBrands = supportCardBrands;
  }

  /**
   * logo
   *
   * @param logo
   * @return the current {@code PaymentOptionDetail} instance, allowing for method chaining
   */
  public PaymentOptionDetail logo(Logo logo) {
    this.logo = logo;
    return this;
  }

  /**
   * logo
   * @return logo
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Logo getLogo() {
    return logo;
  }

  /**
   * logo
   *
   * @param logo
   */ 
  @JsonProperty(JSON_PROPERTY_LOGO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogo(Logo logo) {
    this.logo = logo;
  }

  /**
   * The funding type of the card. Valid values are:
   *
   * @param funding
   * @return the current {@code PaymentOptionDetail} instance, allowing for method chaining
   */
  public PaymentOptionDetail funding(List<FundingEnum> funding) {
    this.funding = funding;
    return this;
  }

  public PaymentOptionDetail addFundingItem(FundingEnum fundingItem) {
    if (this.funding == null) {
      this.funding = new ArrayList<>();
    }
    this.funding.add(fundingItem);
    return this;
  }

  /**
   * The funding type of the card. Valid values are:
   * @return funding
   */
  @ApiModelProperty(value = "The funding type of the card. Valid values are:")
  @JsonProperty(JSON_PROPERTY_FUNDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<FundingEnum> getFunding() {
    return funding;
  }

  /**
   * The funding type of the card. Valid values are:
   *
   * @param funding
   */ 
  @JsonProperty(JSON_PROPERTY_FUNDING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunding(List<FundingEnum> funding) {
    this.funding = funding;
  }

  /**
   * supportBanks
   *
   * @param supportBanks
   * @return the current {@code PaymentOptionDetail} instance, allowing for method chaining
   */
  public PaymentOptionDetail supportBanks(SupportBank supportBanks) {
    this.supportBanks = supportBanks;
    return this;
  }

  /**
   * supportBanks
   * @return supportBanks
   */
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUPPORT_BANKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public SupportBank getSupportBanks() {
    return supportBanks;
  }

  /**
   * supportBanks
   *
   * @param supportBanks
   */ 
  @JsonProperty(JSON_PROPERTY_SUPPORT_BANKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSupportBanks(SupportBank supportBanks) {
    this.supportBanks = supportBanks;
  }

  /**
   * Return true if this PaymentOptionDetail object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentOptionDetail paymentOptionDetail = (PaymentOptionDetail) o;
    return Objects.equals(this.supportCardBrands, paymentOptionDetail.supportCardBrands) &&
        Objects.equals(this.logo, paymentOptionDetail.logo) &&
        Objects.equals(this.funding, paymentOptionDetail.funding) &&
        Objects.equals(this.supportBanks, paymentOptionDetail.supportBanks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supportCardBrands, logo, funding, supportBanks);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentOptionDetail {\n");
    sb.append("    supportCardBrands: ").append(toIndentedString(supportCardBrands)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    funding: ").append(toIndentedString(funding)).append("\n");
    sb.append("    supportBanks: ").append(toIndentedString(supportBanks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

/**
   * Create an instance of PaymentOptionDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentOptionDetail
   * @throws JsonProcessingException if the JSON string is invalid with respect to PaymentOptionDetail
   */
  public static PaymentOptionDetail fromJson(String jsonString) throws JsonProcessingException {
    return JSON.getMapper().readValue(jsonString, PaymentOptionDetail.class);
  }
/**
  * Convert an instance of PaymentOptionDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() throws JsonProcessingException {
    return JSON.getMapper().writeValueAsString(this);
  }
}
